/*
	1722 순열의 순서

	1부터 N까지의 수를 임의로 배열한 순열은 
	총 N! = N X (N-1) X ... X 2 X 1 가지가 있다.
	임의의 순열은 정렬을 할 수 있다.
	예를 들어 N = 3인 경우 
	{1, 2, 3}, {1, 3, 2}, {2, 1, 3}, {2, 3, 1}, {3, 1, 2}, {3, 2, 1}의
	순서로 생각할 수 있다.
	첫 번째 수가 작은 것이 순서상에서 앞서며,
	첫 번째 수가 같으면 두 번째 수가 작은 것이,
	두 번째 수가 같으면 세 번째 수가 작은 것이...
	N이 주어지면 아래의 두 소문제 중에 하나를 풀어야 한다.
	k가 주어지면 k번째 순열을 구하고,
	임의의 순열이 주어지면 이 순열이 몇 번째 순열인지를 
	출력하는 프로그램을 작성하시오

	총 2개의 문제로 이루어져 있다.
	어떤 순열이 몇 번째 순열인지
	몇 번째 순열이 무엇인지

	어떤 순열이 몇 번째 순열인지 구하는 방법
	N = 7, 순열 = 5,2,4,7,6,3,1
	1,?,?,?,?,?,? = 6! 개
	2,?,?,?,?,?,? = 6! 개
	3,?,?,?,?,?,? = 6! 개
	4,?,?,?,?,?,? = 6! 개

	N = 7, 순열 = 5,2,4,7,6,3,1
	5,1,?,?,?,?,? = 5! 개
	5,2,1,?,?,?,? = 4! 개
	5,2,3,?,?,?,? = 4! 개
	5,2,4,1,?,?,? = 3! 개
	5,2,4,3,?,?,? = 3! 개
	5,2,4,6,?,?,? = 3! 개
	5,2,4,7,1,?,? = 2! 개
	5,2,4,7,3,?,? = 2! 개
	5,2,4,7,6,1,? = 1! 개

	5,2,4,7,6,3,1
	6! X 4 + 5! X 1 + 4! X 2 + 3! X 3 + 2! X 2 + 1! 
	= 3,071번째 순열 (0부터 시작했을 때)

	몇 번째 순열이 어떤 순열인지 찾는 방법
	3071번째 순열
	911 - 720 = 191번째 순열 
	(계속 720 빼서 911 된거 4번 반복 후 5번째 값 입력)
	5,1,?,?,?,?,? = 5! = 120

	191 - 120 = 71번째 순열
	5,2,1,?,?,?,? = 4! = 24

	71 - 24 = 47번째 순열
	5,2,3,?,?,?,? = 4! = 24

	47 - 24 = 23번째 순열
	5,2,4,1,?,?,? = 3! = 6

	23 - 6 = 17번째 순열
	5,2,4,3,?,?,? = 3! = 6
	17 - 6 = 11번째 순열
	5,2,4,6,?,?,? = 3! = 6

	11 - 6 = 5번째 순열
	5,2,4,7,1,?,? = 2! = 2
	5 - 2 = 3번째 순열
	5,2,4,7,3,?,? = 2! = 2
	3 - 2 = 1번째 순열

	5,2,4,6,6,1,? = 1! = 1
	1 - 1 = 0번째 순열

	5,2,4,7,6,1,3
*/

#include <iostream>
#include <vector>
using namespace std;

long long f[21] = { 1 };
bool c[21];

int main() {
	for (int i = 1; i <= 20; i++) {
		f[i] = f[i - 1] * i;
	}

	int n;
	cin >> n;
	int what;
	cin >> what;

	if (what == 2) {
		vector<int> a(n);
		for (int i = 0; i < n; i++) {
			cin >> a[i];
		}
		long long ans = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 1; j < a[i]; j++) {
				if (c[j] == false) {
					ans += f[n - i - 1];
				}
			}
			c[a[i]] = true;
		}
		cout << ans + 1 << '\n';
	}
	else if (what == 1) {
		long long k;
		cin >> k;
		vector<int> a(n);
		for (int i = 0; i < n; i++) {
			for (int j = 1; j <= n; j++) {
				if (c[j] == true) continue;
				if (f[n - i - 1] < k) {
					k -= f[n - i - 1];
				}
				else {
					a[i] = j;
					c[j] = true;
					break;
				}
			}
		}
		for (int i = 0; i < n; i++) {
			cout << a[i] << ' ';
		}
		cout << '\n';
	}
	return 0;
}
